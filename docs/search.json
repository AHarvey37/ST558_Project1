[
  {
    "objectID": "Project_1_Harvey_Waghare.html",
    "href": "Project_1_Harvey_Waghare.html",
    "title": "Project1_Harvey_Waghare",
    "section": "",
    "text": "The follow code chunk executed steps 1 - 6 in preparation for creating the functions that will be utilized in the data processing. These chunks do not execute and are only included to display how the functions worked prior to the function’s creation.\n\n#read in tidyverse \nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nReview data and change names\n\n#create tibble from data on website\n#raw_DF &lt;- as.tibble(read.csv(\"https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv\"))\ncleaned_DF&lt;- raw_DF|&gt;\n  #rename column\n  rename(\"area_name\" = \"Area_name\")|&gt;\n  #select only instructed columns\n  select(area_name, STCOU, ends_with(\"D\"))\n\ncreate long table\n\nnew_df &lt;- pivot_longer(cleaned_DF, \n                       names_to = \"Info\",\n                       cols = ends_with(\"D\"))\n\nseparate info col\n\n#add year variable\nnew_df&lt;- new_df|&gt;\n  mutate(year = as.numeric(substr(Info,8,9)))|&gt;\n  #use when() statement to create 4 digit year\n  mutate(year = if_else(year&gt;24,year&gt;24, as.numeric(paste0(\"19\",year)),as.numeric(paste0(\"200\",year)))))\n\nnew_df&lt;-new_df|&gt;\n  #change info to equal the 7 character educational code\n  mutate(Info = substr(Info,1,7))|&gt;\n  rename(enrollment = value)|&gt;\n  #arrange Variables for better visual\n  select(area_name, STCOU, Info, year, enrollment)\n\nDivide into 2 datasets\n\n#find indices of observations that belong in county data set\nx&lt;-grep(pattern = \", \\\\w\\\\w\",new_df$area_name)\n#create county data set\ncounty_df&lt;- new_df[x,]\n#create non-county dataset\nnonCounty_df&lt;- new_df[-x,]\n#check if county dataset and noncounty dataset combine have same number of rows as new_df\n#i.e. check if any rows were lost\nnrow(county_df)+nrow(nonCounty_df) == nrow(new_df)\n#add class to datasets\nclass(county_df)&lt;- c(\"county\", class(county_df))\nclass(nonCounty_df)&lt;- c(\"non-county\", class(nonCounty_df))\n#check\nclass(county_df)\nclass(nonCounty_df)\n\nCreate states in county data set\n\n#add State variable to county data set\ncounty_df&lt;- county_df|&gt;\n  #adds state variable using substr. substr takes area_name as the vector, uses nchar to count number of characters in area_name and subtracts 2 to find where to start, uses nchar to find last char position\n  mutate(\"state\" = substr(area_name, nchar(area_name)-2, nchar(area_name)))|&gt;\n  #rearrange variables\n  select(area_name, state, STCOU, Info, year, value)\n\ncreate division in non-county data set\n\n#create division vectors\ndivision1 &lt;- toupper(c(\"Connecticut\", \"Maine\", \"Massachusetts\", \"New Hampshire\", \"Rhode Island\",\"Vermont\"))\ndivision2 &lt;- toupper(c(\"New Jersey\", \"New York\", \"Pennsylvania\"))\ndivision3 &lt;- toupper(c(\"Illinois\", \"Indiana\", \"Michigan\", \"Ohio\", \"Wisconsin\"))\ndivision4 &lt;- toupper(c(\"Iowa\", \"Kansas\", \"Minnesota\", \"Missouri\", \"Nebraska\", \"North Dakota\", \"South Dakota\"))\ndivision5 &lt;- toupper(c(\"Delaware\", \"Florida\", \"Georgia\", \"Maryland\" , \"North Carolina\", \"South Carolina\", \"Virginia\", \"DISTRICT OF COLUMBIA\", \"West Virginia\"))\ndivision6 &lt;- toupper(c(\"Alabama\", \"Kentucky\", \"Mississippi\", \"Tennessee\"))\ndivision7 &lt;- toupper(c(\"Arkansas\", \"Louisiana\", \"Oklahoma\",   \"Texas\"))\ndivision8 &lt;- toupper(c(\"Arizona\", \"Colorado\", \"Idaho\", \"Montana\", \"Nevada\", \"New Mexico\", \"Utah\", \"Wyoming\"))\ndivision9 &lt;- toupper(c(\"Alaska\", \"California\", \"Hawaii\", \"Oregon\", \"Washington\"))\n#add Division variable to noncounty data set\nnonCounty_df&lt;- nonCounty_df|&gt;\n  mutate(\"division\" = if_else(area_name %in% division1,\n                              \"DIVISION 1\",\n                              if_else(area_name %in% division2,\n                                      \"DIVISION 2\",\n                                      if_else(area_name %in% division3,\n                                              \"DIVISION 3\",\n                                              if_else(area_name %in% division4,\n                                                      \"DIVISION 4\",\n                                                      if_else(area_name %in% division5,\n                                                              \"DIVISION 5\",\n                                                              if_else(area_name %in% division6,\n                                                                      \"DIVISION 6\",\n                                                                      if_else(area_name %in% division7,\n                                                                              \"DIVISION 7\",\n                                                                              if_else(area_name %in% division8,\n                                                                                      \"DIVISION 8\",\n                                                                                      if_else(area_name %in% division9,\n                                                                                              \"DIVISION 9\",\n                                                                                              \"ERROR\"))))))))))\n\n\n\n\nfunction1\n\nrename_and_select &lt;- function(raw_df){\n  pass_df&lt;-raw_df|&gt;\n    #rename column\n    rename(\"area_name\" = \"Area_name\")|&gt;\n    #select only instructed columns\n    select(area_name, STCOU, ends_with(\"D\"))\n  return(pass_df)\n}\n\nfunction2\n\ncreate_longer_w_year&lt;-function(pass_df){\n  #create new tibble\n  passed_df &lt;- pivot_longer(pass_df,\n                            names_to = \"Info\",\n                            cols = ends_with(\"D\"))\n  #add year to tibble\n  passed_df&lt;- passed_df|&gt;\n    #rename value to enrollment\n    rename(enrollment = value)|&gt;\n    mutate(year = as.numeric(substr(Info,8,9)))|&gt;\n    #change 2 digit year to 4 digit year\n    mutate(year = if_else(year&gt;24, as.numeric(paste0(\"19\",year)),as.numeric(paste0(\"200\",year))))\n  passed_df&lt;-passed_df|&gt;\n  #change info to equal the 7 character educational code\n  mutate(Info = substr(Info,1,7))|&gt;\n  #arrange Variables for better visual\n  select(area_name, STCOU, Info, year, enrollment)\n  return(passed_df)\n  }\n\nfunction 3\n\ncreate_state_var&lt;- function(county_df){\n  #add State variable to county data set\n  county_df&lt;- county_df|&gt;\n  #adds state variable using substr. substr takes area_name as the vector, uses nchar to count number of characters in area_name and subtracts 2 to find where to start, uses nchar to find last char position\n    mutate(\"state\" = substr(area_name, nchar(area_name)-2, nchar(area_name)))|&gt;\n    #rearrange variables\n    select(area_name, state, STCOU, Info, year, enrollment)\n  return(county_df)\n  }\n\nfunction 4\n\ncreate_division_var&lt;- function(nonCounty_df){\n  #create division vectors\n  division1 &lt;- toupper(c(\"Connecticut\", \"Maine\", \"Massachusetts\", \"New Hampshire\", \"Rhode Island\",\"Vermont\"))\n  division2 &lt;- toupper(c(\"New Jersey\", \"New York\", \"Pennsylvania\"))\n  division3 &lt;- toupper(c(\"Illinois\", \"Indiana\", \"Michigan\", \"Ohio\", \"Wisconsin\"))\n  division4 &lt;- toupper(c(\"Iowa\", \"Kansas\", \"Minnesota\", \"Missouri\", \"Nebraska\", \"North Dakota\", \"South Dakota\"))\n  division5 &lt;- toupper(c(\"Delaware\", \"Florida\", \"Georgia\", \"Maryland\" , \"North Carolina\", \"South Carolina\", \"Virginia\", \"DISTRICT OF COLUMBIA\", \"West Virginia\"))\n  division6 &lt;- toupper(c(\"Alabama\", \"Kentucky\", \"Mississippi\", \"Tennessee\"))\n  division7 &lt;- toupper(c(\"Arkansas\", \"Louisiana\", \"Oklahoma\",   \"Texas\"))\n  division8 &lt;- toupper(c(\"Arizona\", \"Colorado\", \"Idaho\", \"Montana\", \"Nevada\", \"New Mexico\", \"Utah\", \"Wyoming\"))\n  division9 &lt;- toupper(c(\"Alaska\", \"California\", \"Hawaii\", \"Oregon\", \"Washington\"))\n  #add Division variable to noncounty data set\n  nonCounty_df2&lt;- nonCounty_df|&gt;\n    # mutate(division = 0)|&gt;\n    mutate(division = ifelse(area_name %in% division1,\n                                \"1\",\n                                if_else(area_name %in% division2,\n                                        \"2\",\n                                        if_else(area_name %in% division3,\n                                                \"3\",\n                                                if_else(area_name %in% division4,\n                                                        \"4\",\n                                                        if_else(area_name %in% division5,\n                                                                \"5\",\n                                                                if_else(area_name %in% division6,\n                                                                        \"6\",\n                                                                        if_else(area_name %in% division7,\n                                                                                \"7\",\n                                                                                if_else(area_name %in% division8,\n                                                                                        \"8\",\n                                                                                        if_else(area_name %in% division9,\n                                                                                                \"9\",\n                                                                                                \"ERROR\"))))))))))\n  return(nonCounty_df2)\n  }\n\nfunction 6\n\nsplit_tibbles&lt;- function(pass_df){\n  #find indices of observations that belong in county data set\n  x&lt;-grep(pattern = \", \\\\w\\\\w\",pass_df$area_name)\n  #create county data set\n  county_df&lt;- pass_df[x,]|&gt;\n    create_state_var()\n  #create non-county dataset\n  nonCounty_df&lt;- pass_df[-x,]|&gt;\n    create_division_var()\n  #add class to datasets\n  class(county_df)&lt;- c(\"county\", class(county_df))\n  class(nonCounty_df)&lt;- c(\"non_county\", class(nonCounty_df))\n  #return data sets\n  return(list(county_df, nonCounty_df))\n}\n\n\n\nput it together\n\nmy_wrapper &lt;- function(url, pass_df = as.tibble(c(1:5))){\n  pass_df&lt;-read.csv(url)|&gt;\n    rename_and_select()|&gt;\n    create_longer_w_year()|&gt;\n    split_tibbles()\n  return(pass_df)\n}\n\ntest wrapper\n\nmy_wrapper(\"https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv\")\n\n[[1]]\n# A tibble: 31,450 × 6\n   area_name   state STCOU Info     year enrollment\n   &lt;chr&gt;       &lt;chr&gt; &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;int&gt;\n 1 Autauga, AL \" AL\"  1001 EDU0101  1997       8099\n 2 Autauga, AL \" AL\"  1001 EDU0101  1998       8211\n 3 Autauga, AL \" AL\"  1001 EDU0101  1999       8489\n 4 Autauga, AL \" AL\"  1001 EDU0102  2000       8912\n 5 Autauga, AL \" AL\"  1001 EDU0102  2001       8626\n 6 Autauga, AL \" AL\"  1001 EDU0102  2002       8762\n 7 Autauga, AL \" AL\"  1001 EDU0152  2003       9105\n 8 Autauga, AL \" AL\"  1001 EDU0152  2004       9200\n 9 Autauga, AL \" AL\"  1001 EDU0152  2005       9559\n10 Autauga, AL \" AL\"  1001 EDU0152  2006       9652\n# ℹ 31,440 more rows\n\n[[2]]\n# A tibble: 530 × 6\n   area_name     STCOU Info     year enrollment division\n   &lt;chr&gt;         &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;   \n 1 UNITED STATES     0 EDU0101  1997   44534459 ERROR   \n 2 UNITED STATES     0 EDU0101  1998   46245814 ERROR   \n 3 UNITED STATES     0 EDU0101  1999   46368903 ERROR   \n 4 UNITED STATES     0 EDU0102  2000   46818690 ERROR   \n 5 UNITED STATES     0 EDU0102  2001   47127066 ERROR   \n 6 UNITED STATES     0 EDU0102  2002   47606570 ERROR   \n 7 UNITED STATES     0 EDU0152  2003   48506317 ERROR   \n 8 UNITED STATES     0 EDU0152  2004   48693287 ERROR   \n 9 UNITED STATES     0 EDU0152  2005   48978555 ERROR   \n10 UNITED STATES     0 EDU0152  2006   49140702 ERROR   \n# ℹ 520 more rows\n\n\n\n\n\nparse two data sets\n\nlist1&lt;-sapply(c(\"https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv\",\"https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv\"), my_wrapper)\n\n#test\nprint(list1)\n\n     https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv\n[1,] county,6                                              \n[2,] non_county,6                                          \n     https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv\n[1,] county,6                                              \n[2,] non_county,6                                          \n\nprint(list1[[2]])\n\n# A tibble: 530 × 6\n   area_name     STCOU Info     year enrollment division\n   &lt;chr&gt;         &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;   \n 1 UNITED STATES     0 EDU0101  1987   40024299 ERROR   \n 2 UNITED STATES     0 EDU0101  1988   39967624 ERROR   \n 3 UNITED STATES     0 EDU0101  1989   40317775 ERROR   \n 4 UNITED STATES     0 EDU0101  1990   40737600 ERROR   \n 5 UNITED STATES     0 EDU0101  1991   41385442 ERROR   \n 6 UNITED STATES     0 EDU0101  1992   42088151 ERROR   \n 7 UNITED STATES     0 EDU0101  1993   42724710 ERROR   \n 8 UNITED STATES     0 EDU0101  1994   43369917 ERROR   \n 9 UNITED STATES     0 EDU0101  1995   43993459 ERROR   \n10 UNITED STATES     0 EDU0101  1996   44715737 ERROR   \n# ℹ 520 more rows\n\nprint(list1[[3]])\n\n# A tibble: 31,450 × 6\n   area_name   state STCOU Info     year enrollment\n   &lt;chr&gt;       &lt;chr&gt; &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;int&gt;\n 1 Autauga, AL \" AL\"  1001 EDU0101  1997       8099\n 2 Autauga, AL \" AL\"  1001 EDU0101  1998       8211\n 3 Autauga, AL \" AL\"  1001 EDU0101  1999       8489\n 4 Autauga, AL \" AL\"  1001 EDU0102  2000       8912\n 5 Autauga, AL \" AL\"  1001 EDU0102  2001       8626\n 6 Autauga, AL \" AL\"  1001 EDU0102  2002       8762\n 7 Autauga, AL \" AL\"  1001 EDU0152  2003       9105\n 8 Autauga, AL \" AL\"  1001 EDU0152  2004       9200\n 9 Autauga, AL \" AL\"  1001 EDU0152  2005       9559\n10 Autauga, AL \" AL\"  1001 EDU0152  2006       9652\n# ℹ 31,440 more rows\n\nprint(list1[[4]])\n\n# A tibble: 530 × 6\n   area_name     STCOU Info     year enrollment division\n   &lt;chr&gt;         &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;   \n 1 UNITED STATES     0 EDU0101  1997   44534459 ERROR   \n 2 UNITED STATES     0 EDU0101  1998   46245814 ERROR   \n 3 UNITED STATES     0 EDU0101  1999   46368903 ERROR   \n 4 UNITED STATES     0 EDU0102  2000   46818690 ERROR   \n 5 UNITED STATES     0 EDU0102  2001   47127066 ERROR   \n 6 UNITED STATES     0 EDU0102  2002   47606570 ERROR   \n 7 UNITED STATES     0 EDU0152  2003   48506317 ERROR   \n 8 UNITED STATES     0 EDU0152  2004   48693287 ERROR   \n 9 UNITED STATES     0 EDU0152  2005   48978555 ERROR   \n10 UNITED STATES     0 EDU0152  2006   49140702 ERROR   \n# ℹ 520 more rows\n\n\n\n\n\n\ncombine data\n\ncombine_data_sets &lt;-function(list1){\n  combined_county&lt;-bind_rows(list1[[1]],list1[[3]])\n  class(combined_county)&lt;- c(\"county\",class(combined_county))\n  combined_noncounty&lt;-bind_rows(list1[[2]],list1[[4]])\n  class(combined_noncounty)&lt;- c(\"non_county\",class(combined_noncounty))\n  x&lt;-list(combined_county,combined_noncounty)\n  names(x)&lt;-c(\"county\",\"non_county\")\n  return(x)\n}\n\n\n\n\ncombined_data &lt;- combine_data_sets(list1)\nnames(combined_data)&lt;- c(\"county\",\"non_county\")\ncombined_data$county\n\n# A tibble: 62,900 × 6\n   area_name   state STCOU Info     year enrollment\n   &lt;chr&gt;       &lt;chr&gt; &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;int&gt;\n 1 Autauga, AL \" AL\"  1001 EDU0101  1987       6829\n 2 Autauga, AL \" AL\"  1001 EDU0101  1988       6900\n 3 Autauga, AL \" AL\"  1001 EDU0101  1989       6920\n 4 Autauga, AL \" AL\"  1001 EDU0101  1990       6847\n 5 Autauga, AL \" AL\"  1001 EDU0101  1991       7008\n 6 Autauga, AL \" AL\"  1001 EDU0101  1992       7137\n 7 Autauga, AL \" AL\"  1001 EDU0101  1993       7152\n 8 Autauga, AL \" AL\"  1001 EDU0101  1994       7381\n 9 Autauga, AL \" AL\"  1001 EDU0101  1995       7568\n10 Autauga, AL \" AL\"  1001 EDU0101  1996       7834\n# ℹ 62,890 more rows\n\ncombined_data$non_county\n\n# A tibble: 1,060 × 6\n   area_name     STCOU Info     year enrollment division\n   &lt;chr&gt;         &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;   \n 1 UNITED STATES     0 EDU0101  1987   40024299 ERROR   \n 2 UNITED STATES     0 EDU0101  1988   39967624 ERROR   \n 3 UNITED STATES     0 EDU0101  1989   40317775 ERROR   \n 4 UNITED STATES     0 EDU0101  1990   40737600 ERROR   \n 5 UNITED STATES     0 EDU0101  1991   41385442 ERROR   \n 6 UNITED STATES     0 EDU0101  1992   42088151 ERROR   \n 7 UNITED STATES     0 EDU0101  1993   42724710 ERROR   \n 8 UNITED STATES     0 EDU0101  1994   43369917 ERROR   \n 9 UNITED STATES     0 EDU0101  1995   43993459 ERROR   \n10 UNITED STATES     0 EDU0101  1996   44715737 ERROR   \n# ℹ 1,050 more rows\n\n\n\n\n\n\n\n# Plot state function\nplot.state &lt;- function(df, var_name = \"enrollment\") {\n  df &lt;- df %&gt;%\n    filter(division != \"ERROR\") %&gt;%\n    group_by(year, division) %&gt;%\n    summarize(mean_value = mean(.data[[var_name]], na.rm = TRUE), .groups = 'drop')\n  \n  ggplot(df, aes(x = year, y = mean_value, color = division)) +\n    geom_line() +\n    labs(title = \"Mean Enrollment by Division Over Time\",\n         x = \"Year\",\n         y = \"Mean Enrollment\")\n} \n\n\n# Plot county function\nplot.county &lt;- function(df, state_var = NULL, group = \"top\", number = 5, var_name = \"enrollment\") {\n  if (!is.null(state_var)) {\n    #created a new variable for legibility \n    new_df &lt;- df %&gt;%\n      #this line removes a space that is being added into every observation of the state var\n      mutate(state = substr(state, nchar(state)-1, nchar(state)))%&gt;%\n      filter(state == state_var)\n  }\n  else{\n    new_df&lt;-df\n  }\n  summary_df &lt;- new_df %&gt;%\n    group_by(area_name) %&gt;%\n    summarize(mean_value = mean(.data[[var_name]], na.rm = TRUE), .groups = 'drop') %&gt;%\n    arrange(if (group == \"top\") desc(mean_value) else mean_value) %&gt;%\n    slice_head(n = number)\n  \n  plot_df &lt;- df %&gt;% filter(area_name %in% summary_df$area_name)\n  \n  ggplot(plot_df, aes(x = year, y = .data[[var_name]], color = area_name)) +\n    geom_line() +\n    labs(title = paste(\"Top/Bottom\", number, \"Counties in\", state_var),\n         x = \"Year\",\n         y = var_name)\n}\n\nPutting it Together\n\n# URLs of datasets\n# urls &lt;- c(\n#   \"https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv\",\n#   \"https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv\"\n# )\n\n# # Process data\n# data_list &lt;- lapply(urls, process_data)\n# \n# # Combine data\n# combined_data &lt;- combine_data(data_list)\n\n# Plot state data\nplot.state(combined_data$non_county, var_name = \"enrollment\")\n\n\n\n\n\n\n\n# Plot county data with different parameters\nplot.county(combined_data$county, state_var = \"NC\", group = \"top\", number = 20, var_name = \"enrollment\")\n\n\n\n\n\n\n\nplot.county(combined_data$county, state_var = \"SC\", group = \"bottom\", number = 7, var_name = \"enrollment\")\n\n\n\n\n\n\n\nplot.county(combined_data$county, var_name = \"enrollment\")  # Default parameters\n\n\n\n\n\n\n\nplot.county(combined_data$county, state_var = \"PA\", group = \"top\", number = 8, var_name = \"enrollment\")\n\n\n\n\n\n\n\n# Additional URLs for further processing\nadditional_urls &lt;- c(\n  \"https://www4.stat.ncsu.edu/~online/datasets/PST01a.csv\",\n  \"https://www4.stat.ncsu.edu/~online/datasets/PST01b.csv\",\n  \"https://www4.stat.ncsu.edu/~online/datasets/PST01c.csv\",\n  \"https://www4.stat.ncsu.edu/~online/datasets/PST01d.csv\"\n)\n\n# Process additional data\nadditional_data_list &lt;- sapply(additional_urls, my_wrapper)\n\n# Combine additional data\ncombined_additional_data &lt;- combine_data_sets(additional_data_list)\n# Plot additional state data\nplot.state(combined_additional_data$non_county, var_name = \"enrollment\")\n\n\n\n\n\n\n\n# Plot additional county data with different parameters\nplot.county(combined_additional_data$county, state_var = \"CA\", group = \"top\", number = 15, var_name = \"enrollment\")\n\n\n\n\n\n\n\nplot.county(combined_additional_data$county, state_var = \"TX\", group = \"top\", number = 4, var_name = \"enrollment\")\n\n\n\n\n\n\n\nplot.county(combined_additional_data$county, var_name = \"enrollment\")  # Default parameters\n\n\n\n\n\n\n\nplot.county(combined_additional_data$county, state_var = \"NY\", group = \"top\", number = 10, var_name = \"enrollment\")"
  },
  {
    "objectID": "Project_1_Harvey_Waghare.html#initial-data-processing-steps",
    "href": "Project_1_Harvey_Waghare.html#initial-data-processing-steps",
    "title": "Project1_Harvey_Waghare",
    "section": "",
    "text": "The follow code chunk executed steps 1 - 6 in preparation for creating the functions that will be utilized in the data processing. These chunks do not execute and are only included to display how the functions worked prior to the function’s creation.\n\n#read in tidyverse \nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nReview data and change names\n\n#create tibble from data on website\n#raw_DF &lt;- as.tibble(read.csv(\"https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv\"))\ncleaned_DF&lt;- raw_DF|&gt;\n  #rename column\n  rename(\"area_name\" = \"Area_name\")|&gt;\n  #select only instructed columns\n  select(area_name, STCOU, ends_with(\"D\"))\n\ncreate long table\n\nnew_df &lt;- pivot_longer(cleaned_DF, \n                       names_to = \"Info\",\n                       cols = ends_with(\"D\"))\n\nseparate info col\n\n#add year variable\nnew_df&lt;- new_df|&gt;\n  mutate(year = as.numeric(substr(Info,8,9)))|&gt;\n  #use when() statement to create 4 digit year\n  mutate(year = if_else(year&gt;24,year&gt;24, as.numeric(paste0(\"19\",year)),as.numeric(paste0(\"200\",year)))))\n\nnew_df&lt;-new_df|&gt;\n  #change info to equal the 7 character educational code\n  mutate(Info = substr(Info,1,7))|&gt;\n  rename(enrollment = value)|&gt;\n  #arrange Variables for better visual\n  select(area_name, STCOU, Info, year, enrollment)\n\nDivide into 2 datasets\n\n#find indices of observations that belong in county data set\nx&lt;-grep(pattern = \", \\\\w\\\\w\",new_df$area_name)\n#create county data set\ncounty_df&lt;- new_df[x,]\n#create non-county dataset\nnonCounty_df&lt;- new_df[-x,]\n#check if county dataset and noncounty dataset combine have same number of rows as new_df\n#i.e. check if any rows were lost\nnrow(county_df)+nrow(nonCounty_df) == nrow(new_df)\n#add class to datasets\nclass(county_df)&lt;- c(\"county\", class(county_df))\nclass(nonCounty_df)&lt;- c(\"non-county\", class(nonCounty_df))\n#check\nclass(county_df)\nclass(nonCounty_df)\n\nCreate states in county data set\n\n#add State variable to county data set\ncounty_df&lt;- county_df|&gt;\n  #adds state variable using substr. substr takes area_name as the vector, uses nchar to count number of characters in area_name and subtracts 2 to find where to start, uses nchar to find last char position\n  mutate(\"state\" = substr(area_name, nchar(area_name)-2, nchar(area_name)))|&gt;\n  #rearrange variables\n  select(area_name, state, STCOU, Info, year, value)\n\ncreate division in non-county data set\n\n#create division vectors\ndivision1 &lt;- toupper(c(\"Connecticut\", \"Maine\", \"Massachusetts\", \"New Hampshire\", \"Rhode Island\",\"Vermont\"))\ndivision2 &lt;- toupper(c(\"New Jersey\", \"New York\", \"Pennsylvania\"))\ndivision3 &lt;- toupper(c(\"Illinois\", \"Indiana\", \"Michigan\", \"Ohio\", \"Wisconsin\"))\ndivision4 &lt;- toupper(c(\"Iowa\", \"Kansas\", \"Minnesota\", \"Missouri\", \"Nebraska\", \"North Dakota\", \"South Dakota\"))\ndivision5 &lt;- toupper(c(\"Delaware\", \"Florida\", \"Georgia\", \"Maryland\" , \"North Carolina\", \"South Carolina\", \"Virginia\", \"DISTRICT OF COLUMBIA\", \"West Virginia\"))\ndivision6 &lt;- toupper(c(\"Alabama\", \"Kentucky\", \"Mississippi\", \"Tennessee\"))\ndivision7 &lt;- toupper(c(\"Arkansas\", \"Louisiana\", \"Oklahoma\",   \"Texas\"))\ndivision8 &lt;- toupper(c(\"Arizona\", \"Colorado\", \"Idaho\", \"Montana\", \"Nevada\", \"New Mexico\", \"Utah\", \"Wyoming\"))\ndivision9 &lt;- toupper(c(\"Alaska\", \"California\", \"Hawaii\", \"Oregon\", \"Washington\"))\n#add Division variable to noncounty data set\nnonCounty_df&lt;- nonCounty_df|&gt;\n  mutate(\"division\" = if_else(area_name %in% division1,\n                              \"DIVISION 1\",\n                              if_else(area_name %in% division2,\n                                      \"DIVISION 2\",\n                                      if_else(area_name %in% division3,\n                                              \"DIVISION 3\",\n                                              if_else(area_name %in% division4,\n                                                      \"DIVISION 4\",\n                                                      if_else(area_name %in% division5,\n                                                              \"DIVISION 5\",\n                                                              if_else(area_name %in% division6,\n                                                                      \"DIVISION 6\",\n                                                                      if_else(area_name %in% division7,\n                                                                              \"DIVISION 7\",\n                                                                              if_else(area_name %in% division8,\n                                                                                      \"DIVISION 8\",\n                                                                                      if_else(area_name %in% division9,\n                                                                                              \"DIVISION 9\",\n                                                                                              \"ERROR\"))))))))))"
  },
  {
    "objectID": "Project_1_Harvey_Waghare.html#data-processing-functions",
    "href": "Project_1_Harvey_Waghare.html#data-processing-functions",
    "title": "Project1_Harvey_Waghare",
    "section": "",
    "text": "function1\n\nrename_and_select &lt;- function(raw_df){\n  pass_df&lt;-raw_df|&gt;\n    #rename column\n    rename(\"area_name\" = \"Area_name\")|&gt;\n    #select only instructed columns\n    select(area_name, STCOU, ends_with(\"D\"))\n  return(pass_df)\n}\n\nfunction2\n\ncreate_longer_w_year&lt;-function(pass_df){\n  #create new tibble\n  passed_df &lt;- pivot_longer(pass_df,\n                            names_to = \"Info\",\n                            cols = ends_with(\"D\"))\n  #add year to tibble\n  passed_df&lt;- passed_df|&gt;\n    #rename value to enrollment\n    rename(enrollment = value)|&gt;\n    mutate(year = as.numeric(substr(Info,8,9)))|&gt;\n    #change 2 digit year to 4 digit year\n    mutate(year = if_else(year&gt;24, as.numeric(paste0(\"19\",year)),as.numeric(paste0(\"200\",year))))\n  passed_df&lt;-passed_df|&gt;\n  #change info to equal the 7 character educational code\n  mutate(Info = substr(Info,1,7))|&gt;\n  #arrange Variables for better visual\n  select(area_name, STCOU, Info, year, enrollment)\n  return(passed_df)\n  }\n\nfunction 3\n\ncreate_state_var&lt;- function(county_df){\n  #add State variable to county data set\n  county_df&lt;- county_df|&gt;\n  #adds state variable using substr. substr takes area_name as the vector, uses nchar to count number of characters in area_name and subtracts 2 to find where to start, uses nchar to find last char position\n    mutate(\"state\" = substr(area_name, nchar(area_name)-2, nchar(area_name)))|&gt;\n    #rearrange variables\n    select(area_name, state, STCOU, Info, year, enrollment)\n  return(county_df)\n  }\n\nfunction 4\n\ncreate_division_var&lt;- function(nonCounty_df){\n  #create division vectors\n  division1 &lt;- toupper(c(\"Connecticut\", \"Maine\", \"Massachusetts\", \"New Hampshire\", \"Rhode Island\",\"Vermont\"))\n  division2 &lt;- toupper(c(\"New Jersey\", \"New York\", \"Pennsylvania\"))\n  division3 &lt;- toupper(c(\"Illinois\", \"Indiana\", \"Michigan\", \"Ohio\", \"Wisconsin\"))\n  division4 &lt;- toupper(c(\"Iowa\", \"Kansas\", \"Minnesota\", \"Missouri\", \"Nebraska\", \"North Dakota\", \"South Dakota\"))\n  division5 &lt;- toupper(c(\"Delaware\", \"Florida\", \"Georgia\", \"Maryland\" , \"North Carolina\", \"South Carolina\", \"Virginia\", \"DISTRICT OF COLUMBIA\", \"West Virginia\"))\n  division6 &lt;- toupper(c(\"Alabama\", \"Kentucky\", \"Mississippi\", \"Tennessee\"))\n  division7 &lt;- toupper(c(\"Arkansas\", \"Louisiana\", \"Oklahoma\",   \"Texas\"))\n  division8 &lt;- toupper(c(\"Arizona\", \"Colorado\", \"Idaho\", \"Montana\", \"Nevada\", \"New Mexico\", \"Utah\", \"Wyoming\"))\n  division9 &lt;- toupper(c(\"Alaska\", \"California\", \"Hawaii\", \"Oregon\", \"Washington\"))\n  #add Division variable to noncounty data set\n  nonCounty_df2&lt;- nonCounty_df|&gt;\n    # mutate(division = 0)|&gt;\n    mutate(division = ifelse(area_name %in% division1,\n                                \"1\",\n                                if_else(area_name %in% division2,\n                                        \"2\",\n                                        if_else(area_name %in% division3,\n                                                \"3\",\n                                                if_else(area_name %in% division4,\n                                                        \"4\",\n                                                        if_else(area_name %in% division5,\n                                                                \"5\",\n                                                                if_else(area_name %in% division6,\n                                                                        \"6\",\n                                                                        if_else(area_name %in% division7,\n                                                                                \"7\",\n                                                                                if_else(area_name %in% division8,\n                                                                                        \"8\",\n                                                                                        if_else(area_name %in% division9,\n                                                                                                \"9\",\n                                                                                                \"ERROR\"))))))))))\n  return(nonCounty_df2)\n  }\n\nfunction 6\n\nsplit_tibbles&lt;- function(pass_df){\n  #find indices of observations that belong in county data set\n  x&lt;-grep(pattern = \", \\\\w\\\\w\",pass_df$area_name)\n  #create county data set\n  county_df&lt;- pass_df[x,]|&gt;\n    create_state_var()\n  #create non-county dataset\n  nonCounty_df&lt;- pass_df[-x,]|&gt;\n    create_division_var()\n  #add class to datasets\n  class(county_df)&lt;- c(\"county\", class(county_df))\n  class(nonCounty_df)&lt;- c(\"non_county\", class(nonCounty_df))\n  #return data sets\n  return(list(county_df, nonCounty_df))\n}\n\n\n\nput it together\n\nmy_wrapper &lt;- function(url, pass_df = as.tibble(c(1:5))){\n  pass_df&lt;-read.csv(url)|&gt;\n    rename_and_select()|&gt;\n    create_longer_w_year()|&gt;\n    split_tibbles()\n  return(pass_df)\n}\n\ntest wrapper\n\nmy_wrapper(\"https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv\")\n\n[[1]]\n# A tibble: 31,450 × 6\n   area_name   state STCOU Info     year enrollment\n   &lt;chr&gt;       &lt;chr&gt; &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;int&gt;\n 1 Autauga, AL \" AL\"  1001 EDU0101  1997       8099\n 2 Autauga, AL \" AL\"  1001 EDU0101  1998       8211\n 3 Autauga, AL \" AL\"  1001 EDU0101  1999       8489\n 4 Autauga, AL \" AL\"  1001 EDU0102  2000       8912\n 5 Autauga, AL \" AL\"  1001 EDU0102  2001       8626\n 6 Autauga, AL \" AL\"  1001 EDU0102  2002       8762\n 7 Autauga, AL \" AL\"  1001 EDU0152  2003       9105\n 8 Autauga, AL \" AL\"  1001 EDU0152  2004       9200\n 9 Autauga, AL \" AL\"  1001 EDU0152  2005       9559\n10 Autauga, AL \" AL\"  1001 EDU0152  2006       9652\n# ℹ 31,440 more rows\n\n[[2]]\n# A tibble: 530 × 6\n   area_name     STCOU Info     year enrollment division\n   &lt;chr&gt;         &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;   \n 1 UNITED STATES     0 EDU0101  1997   44534459 ERROR   \n 2 UNITED STATES     0 EDU0101  1998   46245814 ERROR   \n 3 UNITED STATES     0 EDU0101  1999   46368903 ERROR   \n 4 UNITED STATES     0 EDU0102  2000   46818690 ERROR   \n 5 UNITED STATES     0 EDU0102  2001   47127066 ERROR   \n 6 UNITED STATES     0 EDU0102  2002   47606570 ERROR   \n 7 UNITED STATES     0 EDU0152  2003   48506317 ERROR   \n 8 UNITED STATES     0 EDU0152  2004   48693287 ERROR   \n 9 UNITED STATES     0 EDU0152  2005   48978555 ERROR   \n10 UNITED STATES     0 EDU0152  2006   49140702 ERROR   \n# ℹ 520 more rows\n\n\n\n\n\nparse two data sets\n\nlist1&lt;-sapply(c(\"https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv\",\"https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv\"), my_wrapper)\n\n#test\nprint(list1)\n\n     https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv\n[1,] county,6                                              \n[2,] non_county,6                                          \n     https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv\n[1,] county,6                                              \n[2,] non_county,6                                          \n\nprint(list1[[2]])\n\n# A tibble: 530 × 6\n   area_name     STCOU Info     year enrollment division\n   &lt;chr&gt;         &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;   \n 1 UNITED STATES     0 EDU0101  1987   40024299 ERROR   \n 2 UNITED STATES     0 EDU0101  1988   39967624 ERROR   \n 3 UNITED STATES     0 EDU0101  1989   40317775 ERROR   \n 4 UNITED STATES     0 EDU0101  1990   40737600 ERROR   \n 5 UNITED STATES     0 EDU0101  1991   41385442 ERROR   \n 6 UNITED STATES     0 EDU0101  1992   42088151 ERROR   \n 7 UNITED STATES     0 EDU0101  1993   42724710 ERROR   \n 8 UNITED STATES     0 EDU0101  1994   43369917 ERROR   \n 9 UNITED STATES     0 EDU0101  1995   43993459 ERROR   \n10 UNITED STATES     0 EDU0101  1996   44715737 ERROR   \n# ℹ 520 more rows\n\nprint(list1[[3]])\n\n# A tibble: 31,450 × 6\n   area_name   state STCOU Info     year enrollment\n   &lt;chr&gt;       &lt;chr&gt; &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;int&gt;\n 1 Autauga, AL \" AL\"  1001 EDU0101  1997       8099\n 2 Autauga, AL \" AL\"  1001 EDU0101  1998       8211\n 3 Autauga, AL \" AL\"  1001 EDU0101  1999       8489\n 4 Autauga, AL \" AL\"  1001 EDU0102  2000       8912\n 5 Autauga, AL \" AL\"  1001 EDU0102  2001       8626\n 6 Autauga, AL \" AL\"  1001 EDU0102  2002       8762\n 7 Autauga, AL \" AL\"  1001 EDU0152  2003       9105\n 8 Autauga, AL \" AL\"  1001 EDU0152  2004       9200\n 9 Autauga, AL \" AL\"  1001 EDU0152  2005       9559\n10 Autauga, AL \" AL\"  1001 EDU0152  2006       9652\n# ℹ 31,440 more rows\n\nprint(list1[[4]])\n\n# A tibble: 530 × 6\n   area_name     STCOU Info     year enrollment division\n   &lt;chr&gt;         &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;   \n 1 UNITED STATES     0 EDU0101  1997   44534459 ERROR   \n 2 UNITED STATES     0 EDU0101  1998   46245814 ERROR   \n 3 UNITED STATES     0 EDU0101  1999   46368903 ERROR   \n 4 UNITED STATES     0 EDU0102  2000   46818690 ERROR   \n 5 UNITED STATES     0 EDU0102  2001   47127066 ERROR   \n 6 UNITED STATES     0 EDU0102  2002   47606570 ERROR   \n 7 UNITED STATES     0 EDU0152  2003   48506317 ERROR   \n 8 UNITED STATES     0 EDU0152  2004   48693287 ERROR   \n 9 UNITED STATES     0 EDU0152  2005   48978555 ERROR   \n10 UNITED STATES     0 EDU0152  2006   49140702 ERROR   \n# ℹ 520 more rows"
  },
  {
    "objectID": "Project_1_Harvey_Waghare.html#combine-data-function",
    "href": "Project_1_Harvey_Waghare.html#combine-data-function",
    "title": "Project1_Harvey_Waghare",
    "section": "",
    "text": "combine data\n\ncombine_data_sets &lt;-function(list1){\n  combined_county&lt;-bind_rows(list1[[1]],list1[[3]])\n  class(combined_county)&lt;- c(\"county\",class(combined_county))\n  combined_noncounty&lt;-bind_rows(list1[[2]],list1[[4]])\n  class(combined_noncounty)&lt;- c(\"non_county\",class(combined_noncounty))\n  x&lt;-list(combined_county,combined_noncounty)\n  names(x)&lt;-c(\"county\",\"non_county\")\n  return(x)\n}\n\n\n\n\ncombined_data &lt;- combine_data_sets(list1)\nnames(combined_data)&lt;- c(\"county\",\"non_county\")\ncombined_data$county\n\n# A tibble: 62,900 × 6\n   area_name   state STCOU Info     year enrollment\n   &lt;chr&gt;       &lt;chr&gt; &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;int&gt;\n 1 Autauga, AL \" AL\"  1001 EDU0101  1987       6829\n 2 Autauga, AL \" AL\"  1001 EDU0101  1988       6900\n 3 Autauga, AL \" AL\"  1001 EDU0101  1989       6920\n 4 Autauga, AL \" AL\"  1001 EDU0101  1990       6847\n 5 Autauga, AL \" AL\"  1001 EDU0101  1991       7008\n 6 Autauga, AL \" AL\"  1001 EDU0101  1992       7137\n 7 Autauga, AL \" AL\"  1001 EDU0101  1993       7152\n 8 Autauga, AL \" AL\"  1001 EDU0101  1994       7381\n 9 Autauga, AL \" AL\"  1001 EDU0101  1995       7568\n10 Autauga, AL \" AL\"  1001 EDU0101  1996       7834\n# ℹ 62,890 more rows\n\ncombined_data$non_county\n\n# A tibble: 1,060 × 6\n   area_name     STCOU Info     year enrollment division\n   &lt;chr&gt;         &lt;int&gt; &lt;chr&gt;   &lt;dbl&gt;      &lt;int&gt; &lt;chr&gt;   \n 1 UNITED STATES     0 EDU0101  1987   40024299 ERROR   \n 2 UNITED STATES     0 EDU0101  1988   39967624 ERROR   \n 3 UNITED STATES     0 EDU0101  1989   40317775 ERROR   \n 4 UNITED STATES     0 EDU0101  1990   40737600 ERROR   \n 5 UNITED STATES     0 EDU0101  1991   41385442 ERROR   \n 6 UNITED STATES     0 EDU0101  1992   42088151 ERROR   \n 7 UNITED STATES     0 EDU0101  1993   42724710 ERROR   \n 8 UNITED STATES     0 EDU0101  1994   43369917 ERROR   \n 9 UNITED STATES     0 EDU0101  1995   43993459 ERROR   \n10 UNITED STATES     0 EDU0101  1996   44715737 ERROR   \n# ℹ 1,050 more rows"
  },
  {
    "objectID": "Project_1_Harvey_Waghare.html#plotting-functions",
    "href": "Project_1_Harvey_Waghare.html#plotting-functions",
    "title": "Project1_Harvey_Waghare",
    "section": "",
    "text": "# Plot state function\nplot.state &lt;- function(df, var_name = \"enrollment\") {\n  df &lt;- df %&gt;%\n    filter(division != \"ERROR\") %&gt;%\n    group_by(year, division) %&gt;%\n    summarize(mean_value = mean(.data[[var_name]], na.rm = TRUE), .groups = 'drop')\n  \n  ggplot(df, aes(x = year, y = mean_value, color = division)) +\n    geom_line() +\n    labs(title = \"Mean Enrollment by Division Over Time\",\n         x = \"Year\",\n         y = \"Mean Enrollment\")\n} \n\n\n# Plot county function\nplot.county &lt;- function(df, state_var = NULL, group = \"top\", number = 5, var_name = \"enrollment\") {\n  if (!is.null(state_var)) {\n    #created a new variable for legibility \n    new_df &lt;- df %&gt;%\n      #this line removes a space that is being added into every observation of the state var\n      mutate(state = substr(state, nchar(state)-1, nchar(state)))%&gt;%\n      filter(state == state_var)\n  }\n  else{\n    new_df&lt;-df\n  }\n  summary_df &lt;- new_df %&gt;%\n    group_by(area_name) %&gt;%\n    summarize(mean_value = mean(.data[[var_name]], na.rm = TRUE), .groups = 'drop') %&gt;%\n    arrange(if (group == \"top\") desc(mean_value) else mean_value) %&gt;%\n    slice_head(n = number)\n  \n  plot_df &lt;- df %&gt;% filter(area_name %in% summary_df$area_name)\n  \n  ggplot(plot_df, aes(x = year, y = .data[[var_name]], color = area_name)) +\n    geom_line() +\n    labs(title = paste(\"Top/Bottom\", number, \"Counties in\", state_var),\n         x = \"Year\",\n         y = var_name)\n}\n\nPutting it Together\n\n# URLs of datasets\n# urls &lt;- c(\n#   \"https://www4.stat.ncsu.edu/~online/datasets/EDU01a.csv\",\n#   \"https://www4.stat.ncsu.edu/~online/datasets/EDU01b.csv\"\n# )\n\n# # Process data\n# data_list &lt;- lapply(urls, process_data)\n# \n# # Combine data\n# combined_data &lt;- combine_data(data_list)\n\n# Plot state data\nplot.state(combined_data$non_county, var_name = \"enrollment\")\n\n\n\n\n\n\n\n# Plot county data with different parameters\nplot.county(combined_data$county, state_var = \"NC\", group = \"top\", number = 20, var_name = \"enrollment\")\n\n\n\n\n\n\n\nplot.county(combined_data$county, state_var = \"SC\", group = \"bottom\", number = 7, var_name = \"enrollment\")\n\n\n\n\n\n\n\nplot.county(combined_data$county, var_name = \"enrollment\")  # Default parameters\n\n\n\n\n\n\n\nplot.county(combined_data$county, state_var = \"PA\", group = \"top\", number = 8, var_name = \"enrollment\")\n\n\n\n\n\n\n\n# Additional URLs for further processing\nadditional_urls &lt;- c(\n  \"https://www4.stat.ncsu.edu/~online/datasets/PST01a.csv\",\n  \"https://www4.stat.ncsu.edu/~online/datasets/PST01b.csv\",\n  \"https://www4.stat.ncsu.edu/~online/datasets/PST01c.csv\",\n  \"https://www4.stat.ncsu.edu/~online/datasets/PST01d.csv\"\n)\n\n# Process additional data\nadditional_data_list &lt;- sapply(additional_urls, my_wrapper)\n\n# Combine additional data\ncombined_additional_data &lt;- combine_data_sets(additional_data_list)\n# Plot additional state data\nplot.state(combined_additional_data$non_county, var_name = \"enrollment\")\n\n\n\n\n\n\n\n# Plot additional county data with different parameters\nplot.county(combined_additional_data$county, state_var = \"CA\", group = \"top\", number = 15, var_name = \"enrollment\")\n\n\n\n\n\n\n\nplot.county(combined_additional_data$county, state_var = \"TX\", group = \"top\", number = 4, var_name = \"enrollment\")\n\n\n\n\n\n\n\nplot.county(combined_additional_data$county, var_name = \"enrollment\")  # Default parameters\n\n\n\n\n\n\n\nplot.county(combined_additional_data$county, state_var = \"NY\", group = \"top\", number = 10, var_name = \"enrollment\")"
  },
  {
    "objectID": "Task_list.html",
    "href": "Task_list.html",
    "title": "",
    "section": "",
    "text": "#Tentative Division of work\n\nData Processing (Andrew)\nWriting a Generic Function for Summarizing (Nishad)\nPut it to (both)"
  }
]